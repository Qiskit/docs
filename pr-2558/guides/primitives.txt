3:I[55092,[],""]
5:I[82023,[],""]
4:["slug","guides/primitives","c"]
0:["3sCNRslHuKe5qKnCGdL9G",[[["",{"children":["(docs)",{"children":[["slug","guides/primitives","c"],{"children":["__PAGE__?{\"slug\":[\"guides\",\"primitives\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["(docs)",{"children":[["slug","guides/primitives","c"],{"children":["__PAGE__",{},[["$L1","$L2",null],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(docs)","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[null,"$L6"],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/documentation/pr-2558/_next/static/css/5b9840b9a684478d.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/documentation/pr-2558/_next/static/css/eff644983795b90b.css","precedence":"next","crossOrigin":"$undefined"}]],"$L7"],null],null],["$L8",null]]]]
9:I[82443,["340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","646","static/chunks/646-2ec80df38d3526e7.js","997","static/chunks/997-8dc8eec5a02cb984.js","89","static/chunks/89-b36d82a886d92639.js","185","static/chunks/app/layout-e8f7dcaa997b547f.js"],"ThemeNoFlash"]
a:I[35532,["340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","646","static/chunks/646-2ec80df38d3526e7.js","997","static/chunks/997-8dc8eec5a02cb984.js","89","static/chunks/89-b36d82a886d92639.js","185","static/chunks/app/layout-e8f7dcaa997b547f.js"],"ThemeProvider"]
b:I[18025,["340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","646","static/chunks/646-2ec80df38d3526e7.js","997","static/chunks/997-8dc8eec5a02cb984.js","89","static/chunks/89-b36d82a886d92639.js","185","static/chunks/app/layout-e8f7dcaa997b547f.js"],"TooltipProvider"]
c:I[86349,["340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","646","static/chunks/646-2ec80df38d3526e7.js","997","static/chunks/997-8dc8eec5a02cb984.js","89","static/chunks/89-b36d82a886d92639.js","185","static/chunks/app/layout-e8f7dcaa997b547f.js"],"ReactQueryProvider"]
d:I[7356,["340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","646","static/chunks/646-2ec80df38d3526e7.js","997","static/chunks/997-8dc8eec5a02cb984.js","89","static/chunks/89-b36d82a886d92639.js","185","static/chunks/app/layout-e8f7dcaa997b547f.js"],"Header"]
e:I[73027,["294","static/chunks/294-de4cedda5437f1f4.js","601","static/chunks/app/error-80448819af3cb681.js"],"default"]
f:I[1795,["294","static/chunks/294-de4cedda5437f1f4.js","160","static/chunks/app/not-found-7824c46f4c357bae.js"],"Error"]
10:I[82428,["340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","646","static/chunks/646-2ec80df38d3526e7.js","997","static/chunks/997-8dc8eec5a02cb984.js","89","static/chunks/89-b36d82a886d92639.js","185","static/chunks/app/layout-e8f7dcaa997b547f.js"],"AppFooter"]
11:I[77406,["705","static/chunks/8bb4d8db-65878779fedc88be.js","340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","989","static/chunks/989-8e16299465d1af09.js","646","static/chunks/646-2ec80df38d3526e7.js","342","static/chunks/342-193e37ddbbfa9190.js","529","static/chunks/app/(docs)/layout-0faa83ae13e7f9c3.js"],"MdTabsGroupContextProvider"]
12:I[53447,["705","static/chunks/8bb4d8db-65878779fedc88be.js","340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","989","static/chunks/989-8e16299465d1af09.js","646","static/chunks/646-2ec80df38d3526e7.js","342","static/chunks/342-193e37ddbbfa9190.js","529","static/chunks/app/(docs)/layout-0faa83ae13e7f9c3.js"],"DocLeftNav"]
7:["$","html",null,{"lang":"en","suppressHydrationWarning":true,"className":"__variable_8f9567 __variable_185917 font-sans","children":["$","body",null,{"children":[["$","$L9",null,{}],["$","$La",null,{"cookieThemeDomain":"","children":["$","$Lb",null,{"children":["$","$Lc",null,{"children":[["$","$Ld",null,{}],["$","div",null,{"className":"pt-[var(--app-header-height)]","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$e","errorStyles":[],"errorScripts":[],"template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$Lf",null,{"title":"Page not found","description":"Sorry, but the page you were looking for could not be found."}],"notFoundStyles":[]}]}],["$","$L10",null,{}]]}]}]}]]}]}]
6:["$","$L11",null,{"children":["$","div",null,{"className":"flex relative","children":[["$","$L12",null,{"tocPaths":["/guides","/migration-guides","/open-source"]}],["$","div",null,{"className":"flex-1","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(docs)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]}]]}]}]
17:I[16340,["705","static/chunks/8bb4d8db-65878779fedc88be.js","340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","294","static/chunks/294-de4cedda5437f1f4.js","989","static/chunks/989-8e16299465d1af09.js","997","static/chunks/997-8dc8eec5a02cb984.js","369","static/chunks/app/(docs)/%5B...slug%5D/page-15b5ffc2ece63001.js"],""]
18:I[64730,["705","static/chunks/8bb4d8db-65878779fedc88be.js","340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","294","static/chunks/294-de4cedda5437f1f4.js","989","static/chunks/989-8e16299465d1af09.js","997","static/chunks/997-8dc8eec5a02cb984.js","369","static/chunks/app/(docs)/%5B...slug%5D/page-15b5ffc2ece63001.js"],"Pre"]
1b:I[36486,["705","static/chunks/8bb4d8db-65878779fedc88be.js","340","static/chunks/340-51657d858a86963e.js","436","static/chunks/436-20b3296033edd0ed.js","294","static/chunks/294-de4cedda5437f1f4.js","989","static/chunks/989-8e16299465d1af09.js","997","static/chunks/997-8dc8eec5a02cb984.js","369","static/chunks/app/(docs)/%5B...slug%5D/page-15b5ffc2ece63001.js"],"PageToc"]
14:{"d":"M29.25,6.76a6,6,0,0,0-8.5,0l1.42,1.42a4,4,0,1,1,5.67,5.67l-8,8a4,4,0,1,1-5.67-5.66l1.41-1.42-1.41-1.42-1.42,1.42a6,6,0,0,0,0,8.5A6,6,0,0,0,17,25a6,6,0,0,0,4.27-1.76l8-8A6,6,0,0,0,29.25,6.76Z"}
13:["$","path",null,"$14"]
16:{"d":"M4.19,24.82a4,4,0,0,1,0-5.67l8-8a4,4,0,0,1,5.67,0A3.94,3.94,0,0,1,19,14a4,4,0,0,1-1.17,2.85L15.71,19l1.42,1.42,2.12-2.12a6,6,0,0,0-8.51-8.51l-8,8a6,6,0,0,0,0,8.51A6,6,0,0,0,7,28a6.07,6.07,0,0,0,4.28-1.76L9.86,24.82A4,4,0,0,1,4.19,24.82Z"}
15:["$","path",null,"$16"]
1a:{"d":"M10 6L10 8 22.59 8 6 24.59 7.41 26 24 9.41 24 22 26 22 26 6 10 6z"}
19:["$","path",null,"$1a"]
2:["$","div",null,{"className":"grid grid-cols-[1fr,auto] relative","children":[["$","div",null,{"className":"min-h-app max-w-[var(--main-container-max-width)]","children":[["$","div",null,{"className":"pt-16 px-16 xlg:px-32 bg-layer z-10 sticky top-[var(--app-header-height)] flex flex-col gap-[12px]","children":["$","div",null,{"className":"rounded border border-yellow-30/30 dark:border-yellow-30 bg-yellow-10 dark:bg-cool-gray-100","children":["$","div",null,{"className":"flex items-start gap-8 px-16 py-[12px]","children":[["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"var(--cds-support-warning)","aria-hidden":true,"width":"16","height":"16","viewBox":"0 0 16 16","className":"flex-shrink-0 mt-[1px] [&_path[data-icon-path='inner-path']]:fill-[#000] [&_path[data-icon-path='inner-path']]:opacity-100","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M8,1C4.2,1,1,4.2,1,8s3.2,7,7,7s7-3.1,7-7S11.9,1,8,1z M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2 c-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8c0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z"}],["$","path",null,{"d":"M7.5,4h1v5h-1C7.5,9,7.5,4,7.5,4z M8,12.2c-0.4,0-0.8-0.4-0.8-0.8s0.3-0.8,0.8-0.8 c0.4,0,0.8,0.4,0.8,0.8S8.4,12.2,8,12.2z","data-icon-path":"inner-path","opacity":"0"}],"$undefined"]}],["$","div",null,{"className":"text-body-01 text-text-primary","children":[["$","span",null,{"className":"text-heading-compact-01","children":"This is a preview build of IBM Quantum™ documentation."}]," ","Refer to ",["$","a",null,{"children":["docs.quantum.ibm.com",["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","aria-label":"(opens in a new tab)","width":16,"height":16,"viewBox":"0 0 32 32","role":"img","className":"inline ml-2","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M10 6L10 8 22.59 8 6 24.59 7.41 26 24 9.41 24 22 26 22 26 6 10 6z"}],"$undefined"]}]],"href":"https://docs.quantum.ibm.com","className":"text-link-primary no-underline hover:underline inline","target":"_blank"}]," for the official documentation."]}]]}]}]}],["$","main",null,{"id":"main-content","className":"mx-16 md:mx-96 lg:mx-[56px] xlg:mx-96 pb-96 pt-0 max-w-full md:max-w-[800px] overflow-x-auto","children":["$","div",null,{"className":"prose","children":[["$","h1",null,{"id":"introduction-to-primitives","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-06 text-text-primary","children":["Introduction to primitives",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M29.25,6.76a6,6,0,0,0-8.5,0l1.42,1.42a4,4,0,1,1,5.67,5.67l-8,8a4,4,0,1,1-5.67-5.66l1.41-1.42-1.41-1.42-1.42,1.42a6,6,0,0,0,0,8.5A6,6,0,0,0,17,25a6,6,0,0,0,4.27-1.76l8-8A6,6,0,0,0,29.25,6.76Z"}],["$","path",null,{"d":"M4.19,24.82a4,4,0,0,1,0-5.67l8-8a4,4,0,0,1,5.67,0A3.94,3.94,0,0,1,19,14a4,4,0,0,1-1.17,2.85L15.71,19l1.42,1.42,2.12-2.12a6,6,0,0,0-8.51-8.51l-8,8a6,6,0,0,0,0,8.51A6,6,0,0,0,7,28a6.07,6.07,0,0,0,4.28-1.76L9.86,24.82A4,4,0,0,1,4.19,24.82Z"}],"$undefined"]}],"href":"#introduction-to-primitives","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}],"\n",["$","p",null,{"children":"Computing systems are built on multiple layers of abstraction. Abstractions allow you to focus on a\nparticular level of detail relevant to the task at hand. The closer you get to the hardware,\nthe lower the level of abstraction you need (for example, you might\nwant to manipulate electrical signals), and vice versa. The more complex the task you want to perform,\nthe higher-level the abstractions will be (for example, you could be using a programming library to perform\nalgebraic calculations).","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["In this context, a ",["$","em",null,{"children":"primitive"}]," is the smallest processing instruction, the simplest building block from which\none can create something useful for a given abstraction level."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":"The recent progress in quantum computing has increased the need to work at higher levels of abstraction.\nAs the field moves toward larger quantum processing units (QPUs) and more complex workflows, the focus shifts from interacting with individual\nqubit signals to viewing quantum devices as systems that perform necessary tasks.","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["The two most common tasks for quantum computers are sampling quantum states and calculating expectation values.\nThese tasks motivated the design of the Qiskit primitives: ",["$","strong",null,{"children":"Estimator"}]," and ",["$","strong",null,{"children":"Sampler"}],"."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Estimator computes expectation values of observables with respect to states prepared by quantum circuits.","className":"my-12"}],"\n",["$","li",null,{"children":"Sampler samples the output register from quantum circuit execution.","className":"my-12"}],"\n"],"className":"list-outside ml-16 px-16 list-disc"}],"\n",["$","p",null,{"children":"In short, the computational model introduced by the Qiskit primitives moves quantum programming one step closer\nto where classical programming is today, where the focus is less on the hardware details and more on the results\nyou are trying to achieve.","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"primitive-definition-and-implementations","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Primitive definition and implementations",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$13","$15","$undefined"]}],"href":"#primitive-definition-and-implementations","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":["There are two types of Qiskit primitives: the base classes, and their implementations. The Qiskit primitives are defined by open-source primitive base classes that live in the Qiskit SDK (in the  ",["$","$L17",null,{"children":["$","code",null,{"children":"qiskit.primitives","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/primitives","className":"text-link-primary no-underline hover:underline inline"}]," module). Providers (such as Qiskit Runtime) can use these base classes to derive their own Sampler and Estimator implementations.  Most users will interact with provider implementations, not the base primitives."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","h3",null,{"id":"base-classes","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-03 text-text-primary","children":["Base classes",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$13","$15","$undefined"]}],"href":"#base-classes","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}],"\n",["$","p",null,{"children":[["$","$L17",null,{"children":["$","code",null,{"children":"BaseEstimatorV2","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/qiskit.primitives.BaseEstimatorV2","className":"text-link-primary no-underline hover:underline inline"}]," and ",["$","$L17",null,{"children":["$","code",null,{"children":"BaseSamplerV2","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/qiskit.primitives.BaseSamplerV2","className":"text-link-primary no-underline hover:underline inline"}]," - Abstract base classes that define a common interface for implementing primitives. All other classes in the ",["$","$L17",null,{"children":["$","code",null,{"children":"qiskit.primitives","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/primitives","className":"text-link-primary no-underline hover:underline inline"}]," module inherit from these base classes.  Developers should use these if they are interested in creating their own primitives-based execution model for a specific provider. These classes might also be useful for those who want to do highly customized processing and find that the existing primitives implementations are too simple for their needs. General users will not directly use the base classes."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","span",null,{"id":"implementations"}],"\n",["$","h3",null,{"id":"implementations","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-03 text-text-primary","children":["Implementations",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$13","$15","$undefined"]}],"href":"#implementations","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}],"\n",["$","p",null,{"children":"These are implementations of the primitives base classes:","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["The Qiskit Runtime primitives (",["$","$L17",null,{"children":["$","code",null,{"children":"EstimatorV2","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit-ibm-runtime/estimator-v2","className":"text-link-primary no-underline hover:underline inline"}]," and ",["$","$L17",null,{"children":["$","code",null,{"children":"SamplerV2","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit-ibm-runtime/sampler-v2","className":"text-link-primary no-underline hover:underline inline"}],") provide a more sophisticated implementation (for example, by including error mitigation) as a cloud-based service. This implementation of the base primitives is used to access IBM Quantum™ hardware.  They are accessed through IBM Qiskit Runtime."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n"],"className":"my-12"}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","$L17",null,{"children":["$","code",null,{"children":"StatevectorEstimator","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/qiskit.primitives.StatevectorEstimator","className":"text-link-primary no-underline hover:underline inline"}]," and ",["$","$L17",null,{"children":["$","code",null,{"children":"StatevectorSampler","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/qiskit.primitives.StatevectorSampler#statevectorsampler","className":"text-link-primary no-underline hover:underline inline"}]," - Reference implementations of the primitives that use the simulator built into Qiskit. They are built with the Qiskit ",["$","$L17",null,{"children":["$","code",null,{"children":"quantum_info","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/quantum_info#quantum-information","className":"text-link-primary no-underline hover:underline inline"}]," module, producing results based on ideal statevector simulations.  They are accessed through Qiskit."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n"],"className":"my-12"}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","$L17",null,{"children":["$","code",null,{"children":"BackendEstimatorV2","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/qiskit.primitives.BackendEstimatorV2","className":"text-link-primary no-underline hover:underline inline"}]," and ",["$","$L17",null,{"children":["$","code",null,{"children":"BackendSamplerV2","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/qiskit.primitives.BackendSamplerV2","className":"text-link-primary no-underline hover:underline inline"}]," - You can use these classes to “wrap” any quantum computing resource into a primitive. This lets you write primitive-style code for providers that don’t yet have a primitives-based interface. These classes can be used just like the regular Sampler and Estimator, except they should be initialized with an additional ",["$","code",null,{"children":"backend","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]," argument for selecting which quantum computer to run on. They are accessed by using Qiskit."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n"],"className":"my-12"}],"\n"],"className":"list-outside ml-16 px-16 list-disc"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"benefits-of-qiskit-primitives","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Benefits of Qiskit primitives",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$13","$15","$undefined"]}],"href":"#benefits-of-qiskit-primitives","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":["With primitives, Qiskit users can write quantum code for a specific QPU without having to explicitly\nmanage every detail. Also, because of the additional layer of abstraction, you might be able to more easily\naccess advanced hardware capabilities of a given provider. For example, with Qiskit Runtime primitives,\nyou can take advantage of the latest advancements in error mitigation and suppression by toggling options such as the primitive's ",["$","$L17",null,{"children":[["$","code",null,{"children":"resilience_level","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],","],"href":"/api/qiskit-ibm-runtime/options-estimator-options#resilience_level","className":"text-link-primary no-underline hover:underline inline"}]," rather than building your own implementation of these techniques."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":"For hardware providers, implementing primitives natively means you can provide your users with a more “out-of-the-box”\nway to access your hardware features such as advanced post-processing techniques. It is therefore easier for your users to benefit from your hardware's best capabilities.","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"primitive-details","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Primitive details",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$13","$15","$undefined"]}],"href":"#primitive-details","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","p",null,{"children":"As described previously, all primitives are created from the base classes; therefore, they have the same general structure and usage.  For example, the format of the input for all Estimator primitives is the same.  However, there are differences in implementations that make them unique.","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","div",null,{"className":"not-prose my-12 lg:my-16 rounded border border-solid border-layer-02","children":[["$","div",null,{"className":"bg-layer-02 text-text-primary font-600 p-12 py-8 flex items-center gap-8","children":[["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"text-icon-primary","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"fill":"none","d":"M16,8a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,13.875H17.125v-8H13v2.25h1.875v5.75H12v2.25h8Z","data-icon-path":"inner-path"}],["$","path",null,{"d":"M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,6a1.5,1.5,0,1,1-1.5,1.5A1.5,1.5,0,0,1,16,8Zm4,16.125H12v-2.25h2.875v-5.75H13v-2.25h4.125v8H20Z"}],"$undefined"]}],"Note"]}],["$","div",null,{"className":"px-12 [&>p]:my-12","children":["$","p",null,{"children":"Because most users access the Qiskit Runtime primitives, the examples in the rest of this section are based on Qiskit Runtime primitives.","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}]}]]}],"\n",["$","span",null,{"id":"estimator"}],"\n",["$","h3",null,{"id":"estimator","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-03 text-text-primary","children":["Estimator",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$13","$15","$undefined"]}],"href":"#estimator","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}],"\n",["$","p",null,{"children":"The Estimator primitive computes the expectation values for one or more observables with respect to states prepared by quantum circuits. The circuits can be parametrized, as long as the parameter values are also provided as input to the primitive.","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["The input is an array of ",["$","$L17",null,{"children":"PUBs.","href":"/guides/primitive-input-output#pubs","className":"text-link-primary no-underline hover:underline inline"}]," Each PUB is in the format:"],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["(",["$","code",null,{"children":"<single circuit>","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],", ",["$","code",null,{"children":"<one or more observables>","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],", ",["$","code",null,{"children":"<optional one or more parameter values>","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],", ",["$","code",null,{"children":"<optional precision>","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"),"],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["where the optional ",["$","code",null,{"children":"parameter values","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]," can be a list or a single parameter.  Different Estimator implementations support various configuration options. If the input contains measurements, they are ignored."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["The output is a ",["$","$L17",null,{"children":["$","code",null,{"children":"PubResult","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/qiskit.primitives.PubResult#pubresult","className":"text-link-primary no-underline hover:underline inline"}]," that contains the computed expectation values per pair, and their standard errors, in ",["$","code",null,{"children":"PubResult","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]," form. Each ",["$","code",null,{"children":"PubResult","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]," contains both data and metadata."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["The Estimator combines elements from observables and parameter values by following NumPy broadcasting rules as described in the ",["$","$L17",null,{"children":"Primitive inputs and outputs","href":"/guides/primitive-input-output#broadcasting-rules","className":"text-link-primary no-underline hover:underline inline"}]," topic."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":"Example:","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","div",null,{"data-rehype-pretty-code-fragment":"","children":["$","$L18",null,{"style":{"backgroundColor":"var(--shiki-color-background)"},"tabIndex":"0","data-language":"python","data-theme":"default","children":["$","code",null,{"data-line-numbers":"","data-language":"python","data-theme":"default","data-line-numbers-max-digits":"1","children":["$","span",null,{"data-line":"","children":[["$","span",null,{"style":{"color":"var(--shiki-color-text)"},"children":"estimator"}],["$","span",null,{"style":{"color":"var(--shiki-token-punctuation)"},"children":"."}],["$","span",null,{"style":{"color":"var(--shiki-token-function)"},"children":"run"}],["$","span",null,{"style":{"color":"var(--shiki-token-punctuation)"},"children":"([(circuit1, observable1, param_values1),(circuit2, observable2, param_values2)])"}]]}],"className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]}]}],"\n",["$","span",null,{"id":"sampler"}],"\n",["$","h3",null,{"id":"sampler","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-03 text-text-primary","children":["Sampler",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$13","$15","$undefined"]}],"href":"#sampler","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}],"\n",["$","p",null,{"children":"The Sampler's core task is sampling the output register from the execution of one or more quantum circuits. The input circuits can be parametrized, as long as the parameter values are also provided as input to the primitive.","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["The input is one or more ",["$","$L17",null,{"children":"PUBs,","href":"/guides/primitive-input-output#pubs","className":"text-link-primary no-underline hover:underline inline"}]," in the format:"],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["(",["$","code",null,{"children":"<single circuit>","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],", ",["$","code",null,{"children":"<one or more optional parameter value>","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],", ",["$","code",null,{"children":"<optional shots>","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"),"],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["where there can be multiple ",["$","code",null,{"children":"parameter values","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]," items, and each item can be either an array or a single parameter, depending on the chosen circuit. Additionally, the input must contain measurements."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":["The output is counts or per-shot measurements, as ",["$","$L17",null,{"children":["$","code",null,{"children":"PubResult","className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}],"href":"/api/qiskit/qiskit.primitives.PubResult#pubresult","className":"text-link-primary no-underline hover:underline inline"}]," objects, without weights. The result class, however, has methods to return weighted samples, such as counts. See ",["$","$L17",null,{"children":"Primitive inputs and outputs","href":"/guides/primitive-input-output#broadcasting-rules","className":"text-link-primary no-underline hover:underline inline"}]," for full details."],"className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","p",null,{"children":"Example:","className":"group paragraph-el text-text-primary mx-0 has-[span.katex]:overflow-x-auto has-[span.katex]:overflow-y-hidden"}],"\n",["$","div",null,{"data-rehype-pretty-code-fragment":"","children":["$","$L18",null,{"style":{"backgroundColor":"var(--shiki-color-background)"},"tabIndex":"0","data-language":"python","data-theme":"default","children":["$","code",null,{"data-line-numbers":"","data-language":"python","data-theme":"default","data-line-numbers-max-digits":"1","children":[["$","span",null,{"data-line":"","children":[["$","span",null,{"style":{"color":"var(--shiki-color-text)"},"children":"sampler"}],["$","span",null,{"style":{"color":"var(--shiki-token-punctuation)"},"children":"."}],["$","span",null,{"style":{"color":"var(--shiki-token-function)"},"children":"run"}],["$","span",null,{"style":{"color":"var(--shiki-token-punctuation)"},"children":"(["}]]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"style":{"color":"var(--shiki-token-punctuation)"},"children":"  (circuit1, param_values1, shots1),"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"style":{"color":"var(--shiki-token-punctuation)"},"children":"  (circuit2, param_values2, shots2),"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"style":{"color":"var(--shiki-token-punctuation)"},"children":"])"}]}]],"className":"text-code-02 inline whitespace-nowrap px-4 bg-background border border-transparent dark:border-border-subtle-00 group-[.pre-el]:text-code-02 group-[.pre-el]:inline-block group-[.pre-el]:whitespace-pre group-[.pre-el]:p-12 group-[.pre-el]:pr-[50px] group-[.pre-el]:bg-inherit dark:group-[.pre-el]:border-transparent group-[.paragraph-el]:whitespace-normal"}]}]}],"\n",[["$","hr",null,{"className":"mt-48 lg:mt-64 mb-16 md:mb-24 my-16 lg:my-24 border-t border-border-subtle box-content overflow-visible"}],["$","h2",null,{"id":"next-steps","className":"group relative mx-0 scroll-pt-[var(--shell-top-bar-height)] break-words text-heading-04 text-text-primary","children":["Next steps",["$","a",null,{"title":"Permalink to this headline","children":["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"inline","xmlns":"http://www.w3.org/2000/svg","children":["$13","$15","$undefined"]}],"href":"#next-steps","className":"text-link-primary no-underline hover:underline inline heading-permalink pl-[8px] top-0 opacity-0 group-hover:opacity-100 transition-[opacity] duration-75 ease-[cubic-bezier(0.2,0,0.38,0.9)]"}]]}]],"\n",["$","div",null,{"className":"not-prose my-12 lg:my-16 rounded border border-solid border-layer-02","children":[["$","div",null,{"className":"bg-layer-02 text-text-primary font-600 p-12 py-8 flex items-center gap-8","children":[["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","width":16,"height":16,"viewBox":"0 0 32 32","aria-hidden":true,"className":"text-purple-50","xmlns":"http://www.w3.org/2000/svg","children":[["$","path",null,{"d":"M11 24H21V26H11zM13 28H19V30H13zM16 2A10 10 0 006 12a9.19 9.19 0 003.46 7.62c1 .93 1.54 1.46 1.54 2.38h2c0-1.84-1.11-2.87-2.19-3.86A7.2 7.2 0 018 12a8 8 0 0116 0 7.2 7.2 0 01-2.82 6.14c-1.07 1-2.18 2-2.18 3.86h2c0-.92.53-1.45 1.54-2.39A9.18 9.18 0 0026 12 10 10 0 0016 2z"}],"$undefined"]}],"Recommendations"]}],["$","div",null,{"className":"px-12 [&>p]:my-12","children":["$","ul",null,{"children":["\n",["$","li",null,{"children":["Read ",["$","$L17",null,{"children":"Get started with primitives","href":"/guides/get-started-with-primitives","className":"text-link-primary no-underline hover:underline inline"}]," to implement primitives in your work."],"className":"my-12"}],"\n",["$","li",null,{"children":["Review detailed ",["$","$L17",null,{"children":"primitives examples.","href":"/guides/primitives-examples","className":"text-link-primary no-underline hover:underline inline"}]],"className":"my-12"}],"\n",["$","li",null,{"children":["Practice with primitives by working through the ",["$","a",null,{"children":["Cost function lesson",["$","svg",null,{"focusable":"false","preserveAspectRatio":"xMidYMid meet","fill":"currentColor","aria-label":"(opens in a new tab)","width":16,"height":16,"viewBox":"0 0 32 32","role":"img","className":"inline ml-2","xmlns":"http://www.w3.org/2000/svg","children":["$19","$undefined"]}]],"href":"https://learning.quantum.ibm.com/course/variational-algorithm-design/cost-functions#primitives","className":"text-link-primary no-underline hover:underline inline","target":"_blank"}]," in IBM Quantum Learning."],"className":"my-12"}],"\n",["$","li",null,{"children":["See the ",["$","$L17",null,{"children":"EstimatorV2 API reference","href":"/api/qiskit-ibm-runtime/estimator-v2","className":"text-link-primary no-underline hover:underline inline"}]," and ",["$","$L17",null,{"children":"SamplerV2 API reference","href":"/api/qiskit-ibm-runtime/sampler-v2","className":"text-link-primary no-underline hover:underline inline"}],"."],"className":"my-12"}],"\n",["$","li",null,{"children":["Read ",["$","$L17",null,{"children":"Migrate to V2 primitives","href":"/migration-guides/v2-primitives","className":"text-link-primary no-underline hover:underline inline"}],"."],"className":"my-12"}],"\n"],"className":"list-outside ml-16 px-16 list-disc"}]}]]}]]}]}]]}],["$","aside",null,{"data-testid":"page-toc","className":"hidden lg:flex flex-col gap-40 w-[var(--right-toc-menu-width)] mr-[var(--right-toc-margin-right)] sticky top-[var(--app-header-height)] self-start py-24","style":{"marginTop":"40px","maxHeight":"calc(100vh - var(--app-header-height) - 40px)"},"children":["$","$L1b",null,{"headings":[{"depth":1,"value":"Introduction to primitives","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Introduction to primitives\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"introduction-to-primitives"},{"depth":2,"value":"Primitive definition and implementations","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Primitive definition and implementations\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"primitive-definition-and-implementations"},{"depth":3,"value":"Base classes","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Base classes\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"base-classes"},{"depth":3,"value":"Implementations","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Implementations\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"implementations"},{"depth":2,"value":"Benefits of Qiskit primitives","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Benefits of Qiskit primitives\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"benefits-of-qiskit-primitives"},{"depth":2,"value":"Primitive details","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Primitive details\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"primitive-details"},{"depth":3,"value":"Estimator","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Estimator\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"estimator"},{"depth":3,"value":"Sampler","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Sampler\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"sampler"},{"depth":2,"value":"Next steps","compiledValue":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\"\n  }, props.components);\n  return _jsx(_components.div, {\n    children: \"Next steps\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = props.components || ({});\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","id":"next-steps"}],"minHeadingLevel":2,"maxHeadingLevel":3}]}]]}]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Preview: Introduction to primitives"}],["$","meta","3",{"name":"description","content":"Introduction to primitives in Qiskit and Qiskit Runtime, and an explanation of available primitives"}],["$","meta","4",{"name":"robots","content":"none"}],["$","meta","5",{"property":"og:title","content":"Introduction to primitives | IBM Quantum Documentation"}],["$","meta","6",{"property":"og:description","content":"Introduction to primitives in Qiskit and Qiskit Runtime, and an explanation of available primitives"}],["$","meta","7",{"property":"og:site_name","content":"IBM Quantum Documentation"}],["$","meta","8",{"property":"og:type","content":"website"}],["$","meta","9",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","10",{"name":"twitter:creator","content":"@IBM"}],["$","meta","11",{"name":"twitter:title","content":"Introduction to primitives | IBM Quantum Documentation"}],["$","meta","12",{"name":"twitter:description","content":"Introduction to primitives in Qiskit and Qiskit Runtime, and an explanation of available primitives"}],["$","link","13",{"rel":"icon","href":"/icon.svg"}],["$","meta","14",{"name":"next-size-adjust"}]]
1:null
