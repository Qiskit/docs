# This code is a Qiskit project.
#
# (C) Copyright IBM 2024.
#
# This code is licensed under the Apache License, Version 2.0. You may
# obtain a copy of this license in the LICENSE file in the root directory
# of this source tree or at http://www.apache.org/licenses/LICENSE-2.0.
#
# Any modifications or derivative works of this code must retain this
# copyright notice, and modified files need to carry a notice indicating
# that they have been altered from the originals.

name: Docker image deployment process in IBM Cloud Code Engine

on:
  workflow_call:
    inputs:
      env_name:
        default: "Preview"
        required: true
        type: string
    secrets:
      ibmcloud_account:
        required: true
      ibmcloud_api_key:
        required: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set PREVIEW_TAG
        run: echo "PREVIEW_TAG=pr-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
      - name: Set APP_NAME and DOCKER_IMAGE_TAG
        run: |
          echo "APP_NAME=qiskit-docs-preview-${{ env.PREVIEW_TAG }}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_TAG=icr.io/community-digital/qiskit-docs-preview:${{ env.PREVIEW_TAG }}" >> $GITHUB_ENV
      - uses: actions/checkout@v4
      - name: GH deployment status (start)
        id: gh_deployment
        uses: bobheadxi/deployments@v1
        with:
          step: start
          token: ${{ github.token }}
          env: ${{ inputs.env_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Setup IBM Cloud CLI
        run: |
          curl -o IBM_Cloud_CLI_2.20.0_amd64.tar.gz -L https://download.clis.cloud.ibm.com/ibm-cloud-cli/2.20.0/IBM_Cloud_CLI_2.20.0_amd64.tar.gz
          tar xvf IBM_Cloud_CLI_2.20.0_amd64.tar.gz
          sh Bluemix_CLI/install
          ibmcloud --version
          ibmcloud config --check-version=false
          ibmcloud plugin install -f code-engine
          ibmcloud plugin install -f container-registry
      - name: Authenticate with IBM Cloud CLI
        run: |
          ibmcloud login -g "Quantum Community" -r "us-south" -c "${{ secrets.ibmcloud_account }}" --apikey "${{ secrets.ibmcloud_api_key }}"
      - name: Remove previous Docker image (if exists)
        run: |
          ibmcloud cr region-set global
          if ibmcloud cr image-list | grep "qiskit-docs-preview" | grep "${{ env.PREVIEW_TAG }}" ; then
            ibmcloud cr image-rm "${{ env.DOCKER_IMAGE_TAG }}"
          else
            echo "no image to remove"
          fi
      - name: Log-in into IBM Container Registry
        uses: docker/login-action@v2
        with:
          registry: icr.io
          username: iamapikey
          password: ${{ secrets.ibmcloud_api_key }}
      - name: Build and push to IBM registry
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ env.DOCKER_IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.DOCKER_IMAGE_TAG }}
          cache-to: type=inline
      - name: Determine Code Engine project and app status
        id: ce_command_choice
        run: |
          ibmcloud ce project select -n "qiskit-docs-preview"
          if ibmcloud ce app list -q | grep "${{ env.APP_NAME }}" ; then
            echo "command=update" >> $GITHUB_OUTPUT
          else
            echo "command=create" >> $GITHUB_OUTPUT
          fi
      - name: Create a new preview application in Code Engine
        id: ce_app_creation
        run: |
          ibmcloud ce app ${{ steps.ce_command_choice.outputs.command }} \
            --name "${{ env.APP_NAME }}" \
            --image "${{ env.DOCKER_IMAGE_TAG }}" \
            --registry-secret "ibm-container-registry" \
            --port 3000 \
            --cpu 0.25 \
            --memory 0.5G \
            --min 1
          echo "preview_url=$(\
            ibmcloud ce app get --name "${{ env.APP_NAME }}" --output url
          )" >> $GITHUB_OUTPUT
      - name: GH deployment status (finish)
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ github.token }}
          env: ${{ steps.gh_deployment.outputs.env }}
          status: ${{ job.status }}
          override: false
          deployment_id: ${{ steps.gh_deployment.outputs.deployment_id }}
          env_url: ${{ steps.ce_app_creation.outputs.preview_url }}
